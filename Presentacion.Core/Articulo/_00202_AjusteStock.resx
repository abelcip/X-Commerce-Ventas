<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="error.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>264, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABEJJREFUaEPV2nmoFlUch/E3Myu0tCKKwsxATSOEog0rjMLKSjRCTP9QWpSCiooW
        ihaQiNJoIaWCBEsqjRKhklZoD4IiKoIKMsQ2WygSl9bnuff+4DDMex25Z+aOX/jA+55775k58545c855
        b2cQMgozsBRv4Qt82+djPI3bcDxamRPwCH7BfxV9jRvRihyEZdiK4onuwM/YhB/73hd/Rz9hLgYtU2CX
        SU/qBzyKM3E49kKaSbgcbyD9Oz2JPdFoLsZviJPwyl+DAxEZBhtzLI7ue5/GsueRNuZ9jEAjuQC/Iw7+
        OsbCDMeFWA+707+I3/P1V3AgOBKR2Ui7po2p/ZMZj82Igz6GuILT8BniZ/Lk08akVmIfmGNgw+NnflK1
        ZW+8gjiYfdpPwPtgMbbjL7yHO3Eq/KQcEHQS5mE5tsA6voflxsZYR9R/PmrJpYiDOHT6zNgD9+IfvITJ
        GIoqWYhfYaMcvs25iGN431Wtq3LsAj7QPIBdxfvEXAm72oKed7ueffE4HIIPsICsQzTmCgty5jxE5S9b
        QByRPsLEnncDyy14qvdlZwziWA7nWeNVi8pnWkB8KvtcyJW7cFTvy867iOM5fGfLl7BS+7T3xhCcgtyJ
        G9wuGw25yYIcccz3ZrbS1yxoIEcgGrLaghw5GVHpwxY0EGcB8ZD81IIcSYfEOyxoKPGAdD6XJYPVEGfN
        WRviTDYacrcFDSXWNi7OsiQd15+xoIF4s8cA86oFOeIc609YafYHVJdMR1y8By3IFdffVur0ZIIFNcfR
        MRoSD+AsuQ5R8QMW1JiRiBHL++RgZMv+iCn2HzgUdeUGxEVzvZM9riPiAGssqCHe5DFaeeFORNa4Coz7
        JFyEnHGR9iKi/lpmEWchbYQcHl3e5ojrnScQdX+DdCMjW0YjbURwaTsfA4mzaZ9PUae7M1642rIIaSNS
        KxArvKpxp2QqYokgd2fcVcker8wZvS97chXSBqT8dO6HOy39xRFwFt6GfxN/75LZfeOscVPB5WccyIVO
        5HrEwbvZiFW4By6MrOshePKuz4u/785jrA6zxQ2B+1Dcj/KhGEkb47LUT+LvpKwK6/8QblzE/la27Af3
        q8oOrGsRGYfTYVcxDp9Xw53HtMuk3MjeAEcou6wXLXscPYp7sWWc1leJuyvnwOeNuzB+J+IDz/V+bTkM
        6c5FN17pqg1pPHaRT1B24in79O1oZY7Ddyg78aIlcDRrXU5D2VBYxm+larkxB5o5cLOt7KSLXoCjWevi
        VCOWrjvzDhzNWhX7983oNsYXfY5D0Kr45HSJWnxad+MUwzG/VXFRlM71d8YvWOJbpNbERjyLshMu4wBw
        NloX50ZlJ1xmG/xGtpX5AGUnXeQAcBlam+J/JnRzK1qdKhNB1x6tnHqkuQRlJx/ccnEdsVtkLcoa8Rxa
        OfXoL35f7Qab98ybcBOhsX9eGVg6nf8BBxb9JZSduWIAAAAASUVORK5CYII=
</value>
  </data>
</root>